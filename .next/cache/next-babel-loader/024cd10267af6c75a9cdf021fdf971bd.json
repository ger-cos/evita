{"ast":null,"code":"var _jsxFileName = \"/home/gercos/Documents/web/proyecto-evita/components/pets/PetForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PetAvatar from './PetAvatar.js';\nimport { useForm } from 'react-hook-form';\nimport { savePet } from '../../services/Database';\nimport { db } from '../../services/firebase';\nexport default function PetForm() {\n  _s();\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = values => {\n    //console.log(values)\n    //props.onAddAvatar()\n    //savePet(values)\n    console.log(values);\n    db.collection(\"pet\").doc().set(values);\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    ref: register,\n    name: \"nombre\",\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputNombre\",\n    placeholder: \"Evite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, \"Edad\"), __jsx(\"input\", {\n    ref: register,\n    name: \"edad\",\n    type: \"number\",\n    className: \"form-control\",\n    id: \"inputEdad\",\n    placeholder: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, __jsx(PetAvatar, {\n    label: \"avatar\",\n    register: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Submit\")));\n}\n/*\nclass PetForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            nombre: '',\n            edad: '',\n            peso: 0,\n            propietario: '',\n            alojamiento: '',\n            avatar: '',\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleAddAvatar = this.handleAddAvatar.bind(this) \n    }\n\n    handleChange(event){\n        const value = event.target.value\n        const name = event.target.name\n \n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleAddAvatar(avatar){\n        this.setState({\n           avatar: avatar\n       }) \n    }\n\n    handleSubmit(event){\n        event.preventDefault()\n        alert(\"Estas por registrar a esta nueva rata de campo\")\n        console.log(this.state)\n        this.props.onAddPet(this.state)\n        this.setState({\n            nombre: '',\n            edad: '',\n            peso: 0,\n            propietario: '',\n            alojamiento: '',\n        })\n        \n    }\n\n    render(){\n        return(\n            \n        )\n    }\n}\n\nexport default PetForm\n\n*/\n\n_s(PetForm, \"YCsANGaEW6cUd2ydMBN8lg1R7RY=\", false, function () {\n  return [useForm];\n});\n\n_c = PetForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetForm\");","map":{"version":3,"sources":["/home/gercos/Documents/web/proyecto-evita/components/pets/PetForm.js"],"names":["PetAvatar","useForm","savePet","db","PetForm","register","handleSubmit","onSubmit","values","console","log","collection","doc","set"],"mappings":";;;;;AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,SAAQC,OAAR,QAAsB,yBAAtB;AACA,SAAQC,EAAR,QAAiB,yBAAjB;AACA,eAAe,SAASC,OAAT,GAAkB;AAAA;;AAC7B,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA2BL,OAAO,EAAxC;;AAEA,QAAMM,QAAQ,GAAIC,MAAD,IAAW;AACxB;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAL,IAAAA,EAAE,CAACQ,UAAH,CAAc,KAAd,EAAqBC,GAArB,GAA2BC,GAA3B,CAA+BL,MAA/B;AACH,GAND;;AAQA,SACI;AAAM,IAAA,QAAQ,EAAEF,YAAY,CAACC,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AACA,IAAA,GAAG,EAAEF,QADL;AAEA,IAAA,IAAI,EAAC,QAFL;AAGA,IAAA,IAAI,EAAC,MAHL;AAIA,IAAA,SAAS,EAAC,cAJV;AAKA,IAAA,EAAE,EAAC,aALH;AAMA,IAAA,WAAW,EAAC,OANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADR,EAaQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AACA,IAAA,GAAG,EAAEA,QADL;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,IAAI,EAAC,QAHL;AAIA,IAAA,SAAS,EAAC,cAJV;AAKA,IAAA,EAAE,EAAC,WALH;AAMA,IAAA,WAAW,EAAC,GANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAbR,EAwBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AACA,IAAA,KAAK,EAAE,QADP;AAEA,IAAA,QAAQ,EAAEA,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAxBR,EA+BQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,SAAS,EAAC,iBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CA/BR,CADJ;AAwCH;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GApDwBD,O;UACaH,O;;;KADbG,O","sourcesContent":["import PetAvatar from './PetAvatar.js'\nimport {useForm} from 'react-hook-form'\nimport {savePet} from '../../services/Database'\nimport {db} from '../../services/firebase'\nexport default function PetForm(){\n    const {register, handleSubmit} = useForm()\n\n    const onSubmit = (values) =>{\n        //console.log(values)\n        //props.onAddAvatar()\n        //savePet(values)\n        console.log(values)\n        db.collection(\"pet\").doc().set(values)\n    }\n\n    return(\n        <form onSubmit={handleSubmit(onSubmit)}>\n                <div>\n                    <label>Nombre</label>\n                    <input\n                    ref={register} \n                    name=\"nombre\"\n                    type=\"text\" \n                    className=\"form-control\" \n                    id=\"inputNombre\" \n                    placeholder=\"Evite\"></input>\n                </div>\n                \n                \n                <div>\n                    <label>Edad</label>\n                    <input \n                    ref={register}\n                    name=\"edad\" \n                    type=\"number\" \n                    className=\"form-control\" \n                    id=\"inputEdad\" \n                    placeholder=\"4\"></input>\n                </div>\n                \n                <div>\n                    <PetAvatar\n                    label={\"avatar\"}\n                    register={register}> \n                    </PetAvatar>\n                </div>\n                \n                <div >\n                    <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\" \n                    >Submit</button>\n                </div>\n            </form>\n    )\n}\n/*\nclass PetForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            nombre: '',\n            edad: '',\n            peso: 0,\n            propietario: '',\n            alojamiento: '',\n            avatar: '',\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleAddAvatar = this.handleAddAvatar.bind(this) \n    }\n\n    handleChange(event){\n        const value = event.target.value\n        const name = event.target.name\n \n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleAddAvatar(avatar){\n        this.setState({\n           avatar: avatar\n       }) \n    }\n\n    handleSubmit(event){\n        event.preventDefault()\n        alert(\"Estas por registrar a esta nueva rata de campo\")\n        console.log(this.state)\n        this.props.onAddPet(this.state)\n        this.setState({\n            nombre: '',\n            edad: '',\n            peso: 0,\n            propietario: '',\n            alojamiento: '',\n        })\n        \n    }\n\n    render(){\n        return(\n            \n        )\n    }\n}\n\nexport default PetForm\n\n*/"]},"metadata":{},"sourceType":"module"}