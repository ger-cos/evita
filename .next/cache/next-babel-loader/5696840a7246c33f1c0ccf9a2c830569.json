{"ast":null,"code":"var _jsxFileName = \"/home/gercos/Documents/web/proyecto-evita/components/pets/PetAvatar.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nexport default function PetAvatar({\n  src,\n  flag\n}) {\n  const {\n    0: img,\n    1: setImg\n  } = useState('');\n  useEffect(() => {\n    alert('cancha');\n    console.log(src);\n\n    if (flag) {\n      var reader = new FileReader();\n\n      reader.onloadend = function () {\n        setImg(reader.result);\n      };\n\n      if (src) {\n        reader.readAsDataURL(src);\n      } else {\n        preview.src = \"\";\n      }\n    } else {\n      setImg(src);\n    }\n  }, []);\n  return __jsx(\"img\", {\n    id: \"pet\",\n    src: img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/home/gercos/Documents/web/proyecto-evita/components/pets/PetAvatar.js"],"names":["useEffect","useState","PetAvatar","src","flag","img","setImg","alert","console","log","reader","FileReader","onloadend","result","readAsDataURL","preview"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,SAAT,CAAmB;AAACC,EAAAA,GAAD;AAAMC,EAAAA;AAAN,CAAnB,EAA+B;AAE1C,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBL,QAAQ,CAAC,EAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZO,IAAAA,KAAK,CAAC,QAAD,CAAL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;;AACA,QAAGC,IAAH,EAAQ;AACJ,UAAIM,MAAM,GAAI,IAAIC,UAAJ,EAAd;;AAEAD,MAAAA,MAAM,CAACE,SAAP,GAAmB,YAAY;AAC3BN,QAAAA,MAAM,CAACI,MAAM,CAACG,MAAR,CAAN;AACH,OAFD;;AAIA,UAAIV,GAAJ,EAAS;AACLO,QAAAA,MAAM,CAACI,aAAP,CAAqBX,GAArB;AACH,OAFD,MAGK;AACDY,QAAAA,OAAO,CAACZ,GAAR,GAAc,EAAd;AACH;AACJ,KAbD,MAcI;AACAG,MAAAA,MAAM,CAACH,GAAD,CAAN;AACH;AACJ,GArBQ,EAqBN,EArBM,CAAT;AAwBA,SACI;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,GAAG,EAAEE,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH","sourcesContent":["import { useEffect, useState } from 'react'\n\nexport default function PetAvatar({src, flag}){\n\n    const [img, setImg] = useState('')\n    \n    useEffect(() => {\n\n        alert('cancha')\n        console.log(src)\n        if(flag){\n            var reader  = new FileReader();\n        \n            reader.onloadend = function () {\n                setImg(reader.result)\n            }\n            \n            if (src) {\n                reader.readAsDataURL(src);\n            } \n            else {\n                preview.src = \"\";\n            }\n        }\n        else{\n            setImg(src)\n        }\n    }, [])\n\n\n    return(\n        <img id='pet' src={img}/>\n    )\n}"]},"metadata":{},"sourceType":"module"}