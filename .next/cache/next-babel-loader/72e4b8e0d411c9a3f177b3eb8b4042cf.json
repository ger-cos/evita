{"ast":null,"code":"var _jsxFileName = \"/home/gercos/Documents/web/proyecto-evita/components/pets/PetAvatar.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nexport default function PetAvatar(props) {\n  const {\n    0: file,\n    1: setFile\n  } = useState('');\n  const {\n    0: imagePreviewUrl,\n    1: setImagePreviewUrl\n  } = useState('');\n  useEffect(() => {\n    var img = document.getElementById('pet');\n    img.style.borderRadius = \"50%\";\n    img.style.objectFit = \"cover\";\n    img.style.objectPosition = \"center\";\n    img.style.height = \"150px\";\n    img.style.width = \"150px\";\n  }, [file, imagePreviewUrl]);\n\n  const handleImageChange = e => {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      setFile(file);\n      setImagePreviewUrl(reader.result); //props.onAddAvatar(reader.result)\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  let imagePreview = null;\n\n  if (imagePreviewUrl) {\n    imagePreview = __jsx(\"img\", {\n      id: \"pet\",\n      src: imagePreviewUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 23\n      }\n    });\n  } else {\n    imagePreview = __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 23\n      }\n    }, \"Please selcet an Rata de campo Image\");\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"input\", {\n    className: \"btn btn-outline-dak\",\n    type: \"file\",\n    onChange: handleImageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"imgPreview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, imagePreview));\n}","map":{"version":3,"sources":["/home/gercos/Documents/web/proyecto-evita/components/pets/PetAvatar.js"],"names":["useState","useEffect","PetAvatar","props","file","setFile","imagePreviewUrl","setImagePreviewUrl","img","document","getElementById","style","borderRadius","objectFit","objectPosition","height","width","handleImageChange","e","preventDefault","reader","FileReader","target","files","onloadend","result","readAsDataURL","imagePreview"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAGpC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACM,eAAD;AAAA,OAAkBC;AAAlB,MAAwCP,QAAQ,CAAC,EAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAV;AACAF,IAAAA,GAAG,CAACG,KAAJ,CAAUC,YAAV,GAAuB,KAAvB;AACAJ,IAAAA,GAAG,CAACG,KAAJ,CAAUE,SAAV,GAAoB,OAApB;AACAL,IAAAA,GAAG,CAACG,KAAJ,CAAUG,cAAV,GAAyB,QAAzB;AACAN,IAAAA,GAAG,CAACG,KAAJ,CAAUI,MAAV,GAAiB,OAAjB;AACAP,IAAAA,GAAG,CAACG,KAAJ,CAAUK,KAAV,GAAgB,OAAhB;AACH,GAPQ,EAON,CAACZ,IAAD,EAAOE,eAAP,CAPM,CAAT;;AASA,QAAMW,iBAAiB,GAAIC,CAAD,IAAM;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,QAAIjB,IAAI,GAAGc,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAX;;AAEAH,IAAAA,MAAM,CAACI,SAAP,GAAmB,MAAM;AACvBnB,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,kBAAkB,CAACa,MAAM,CAACK,MAAR,CAAlB,CAFuB,CAGvB;AACD,KAJD;;AAKAL,IAAAA,MAAM,CAACM,aAAP,CAAqBtB,IAArB;AACD,GAZD;;AAcA,MAAIuB,YAAY,GAAG,IAAnB;;AACA,MAAIrB,eAAJ,EAAqB;AACnBqB,IAAAA,YAAY,GAAI;AAAK,MAAA,EAAE,EAAC,KAAR;AAAc,MAAA,GAAG,EAAErB,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AACD,GAFD,MAGI;AACAqB,IAAAA,YAAY,GAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAd;AACH;;AACD,SACE,4BACE;AAAO,IAAA,SAAS,EAAC,qBAAjB;AAAuC,IAAA,IAAI,EAAC,MAA5C;AAAmD,IAAA,QAAQ,EAAEV,iBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKU,YADL,CAFF,CADF;AAQH","sourcesContent":["import {useState, useEffect} from 'react'\n\nexport default function PetAvatar(props){\n\n  \n    const [file, setFile] = useState('')\n    const [imagePreviewUrl, setImagePreviewUrl] = useState('')\n   \n    useEffect(() => {\n        var img = document.getElementById('pet')\n        img.style.borderRadius=\"50%\"\n        img.style.objectFit=\"cover\"\n        img.style.objectPosition=\"center\"\n        img.style.height=\"150px\"\n        img.style.width=\"150px\"\n    }, [file, imagePreviewUrl])\n   \n    const handleImageChange = (e) =>{\n      e.preventDefault();\n\n      let reader = new FileReader();\n      let file = e.target.files[0];\n\n      reader.onloadend = () => {\n        setFile(file)\n        setImagePreviewUrl(reader.result)\n        //props.onAddAvatar(reader.result)\n      }\n      reader.readAsDataURL(file)\n    }\n\n    let imagePreview = null;\n    if (imagePreviewUrl) {\n      imagePreview = (<img id='pet' src={imagePreviewUrl} />);\n    }\n    else{\n        imagePreview=(<div >Please selcet an Rata de campo Image</div>)\n    }\n    return (\n      <>\n        <input className=\"btn btn-outline-dak\" type=\"file\" onChange={handleImageChange} />\n        <div className=\"imgPreview\">\n            {imagePreview}\n        </div>\n      </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}