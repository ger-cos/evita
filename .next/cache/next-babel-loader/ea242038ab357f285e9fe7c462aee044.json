{"ast":null,"code":"var _jsxFileName = \"/home/gercos/Documents/web/proyecto-evita/components/pets/PetAvatar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nexport default function PetAvatar(props) {\n  _s();\n\n  const {\n    0: file,\n    1: setFile\n  } = useState('');\n  const {\n    0: imagePreviewUrl,\n    1: setImagePreviewUrl\n  } = useState(''); //MAAAAAAAAAAAAAAAAAAL\n\n  useEffect(() => {\n    var img = document.getElementById('pet');\n\n    if (img) {\n      img.style.borderRadius = \"50%\";\n      img.style.objectFit = \"cover\";\n      img.style.objectPosition = \"center\";\n      img.style.height = \"150px\";\n      img.style.width = \"150px\";\n    }\n  }, [file, imagePreviewUrl]);\n\n  const handleImageChange = e => {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      setFile(file);\n      setImagePreviewUrl(reader.result); //props.onAddAvatar(reader.result)\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  let imagePreview = null;\n\n  if (imagePreviewUrl) {\n    imagePreview = __jsx(\"img\", {\n      id: \"pet\",\n      src: imagePreviewUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 23\n      }\n    });\n  } else {\n    imagePreview = __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 23\n      }\n    }, \"Please selcet an Rata de campo Image\");\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, imagePreview), __jsx(\"input\", {\n    accept: \"image/*\",\n    id: \"icon-button-file\",\n    type: \"file\",\n    onChange: handleImageChange,\n    style: {\n      display: 'none',\n      align: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"icon-button-file\",\n    style: {\n      align: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"upload picture\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(PhotoCamera, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }))));\n}\n\n_s(PetAvatar, \"CP5ixEbdKc95ZFcx7tsK/05PPKE=\");\n\n_c = PetAvatar;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetAvatar\");","map":{"version":3,"sources":["/home/gercos/Documents/web/proyecto-evita/components/pets/PetAvatar.js"],"names":["useState","useEffect","IconButton","PhotoCamera","PetAvatar","props","file","setFile","imagePreviewUrl","setImagePreviewUrl","img","document","getElementById","style","borderRadius","objectFit","objectPosition","height","width","handleImageChange","e","preventDefault","reader","FileReader","target","files","onloadend","result","readAsDataURL","imagePreview","display","align"],"mappings":";;;;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAAA;;AAGpC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACQ,eAAD;AAAA,OAAkBC;AAAlB,MAAwCT,QAAQ,CAAC,EAAD,CAAtD,CAJoC,CAKrC;;AACCC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAV;;AACA,QAAGF,GAAH,EAAO;AACHA,MAAAA,GAAG,CAACG,KAAJ,CAAUC,YAAV,GAAuB,KAAvB;AACAJ,MAAAA,GAAG,CAACG,KAAJ,CAAUE,SAAV,GAAoB,OAApB;AACAL,MAAAA,GAAG,CAACG,KAAJ,CAAUG,cAAV,GAAyB,QAAzB;AACAN,MAAAA,GAAG,CAACG,KAAJ,CAAUI,MAAV,GAAiB,OAAjB;AACAP,MAAAA,GAAG,CAACG,KAAJ,CAAUK,KAAV,GAAgB,OAAhB;AACH;AAEJ,GAVQ,EAUN,CAACZ,IAAD,EAAOE,eAAP,CAVM,CAAT;;AAYA,QAAMW,iBAAiB,GAAIC,CAAD,IAAM;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,QAAIjB,IAAI,GAAGc,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAX;;AAEAH,IAAAA,MAAM,CAACI,SAAP,GAAmB,MAAM;AACvBnB,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,kBAAkB,CAACa,MAAM,CAACK,MAAR,CAAlB,CAFuB,CAGvB;AACD,KAJD;;AAKAL,IAAAA,MAAM,CAACM,aAAP,CAAqBtB,IAArB;AACD,GAZD;;AAcA,MAAIuB,YAAY,GAAG,IAAnB;;AACA,MAAIrB,eAAJ,EAAqB;AACnBqB,IAAAA,YAAY,GAAI;AAAK,MAAA,EAAE,EAAC,KAAR;AAAc,MAAA,GAAG,EAAErB,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AACD,GAFD,MAGI;AACAqB,IAAAA,YAAY,GAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAd;AACH;;AACD,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,YADL,CADF,EAIE;AACI,IAAA,MAAM,EAAC,SADX;AAEI,IAAA,EAAE,EAAC,kBAFP;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAEV,iBAJd;AAKI,IAAA,KAAK,EAAE;AAACW,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAWE;AACI,IAAA,OAAO,EAAC,kBADZ;AAC+B,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAK,EAAE;AAAR,KADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,UAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,kBAAW,gBAFf;AAGI,IAAA,SAAS,EAAC,MAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIQ,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CAFJ,CAXF,CADF;AAwBH;;GA/DuB3B,S;;KAAAA,S","sourcesContent":["import {useState, useEffect} from 'react'\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\n\nexport default function PetAvatar(props){\n\n  \n    const [file, setFile] = useState('')\n    const [imagePreviewUrl, setImagePreviewUrl] = useState('')\n   //MAAAAAAAAAAAAAAAAAAL\n    useEffect(() => {\n        var img = document.getElementById('pet')\n        if(img){\n            img.style.borderRadius=\"50%\"\n            img.style.objectFit=\"cover\"\n            img.style.objectPosition=\"center\"\n            img.style.height=\"150px\"\n            img.style.width=\"150px\"\n        }\n \n    }, [file, imagePreviewUrl])\n   \n    const handleImageChange = (e) =>{\n      e.preventDefault();\n\n      let reader = new FileReader();\n      let file = e.target.files[0];\n\n      reader.onloadend = () => {\n        setFile(file)\n        setImagePreviewUrl(reader.result)\n        //props.onAddAvatar(reader.result)\n      }\n      reader.readAsDataURL(file)\n    }\n\n    let imagePreview = null;\n    if (imagePreviewUrl) {\n      imagePreview = (<img id='pet' src={imagePreviewUrl} />);\n    }\n    else{\n        imagePreview=(<div >Please selcet an Rata de campo Image</div>)\n    }\n    return (\n      <>\n        <div>\n            {imagePreview}\n        </div>\n        <input \n            accept=\"image/*\" \n            id=\"icon-button-file\" \n            type=\"file\"\n            onChange={handleImageChange}\n            style={{display: 'none', align: 'center'}}\n        />\n        <label \n            htmlFor=\"icon-button-file\" style={{align: 'center'}}>\n            <IconButton \n                color=\"primary\" \n                aria-label=\"upload picture\" \n                component=\"span\">\n                    <PhotoCamera />\n            </IconButton>\n        </label>\n\n      </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}