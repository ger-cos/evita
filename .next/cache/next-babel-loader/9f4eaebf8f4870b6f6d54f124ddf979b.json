{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/home/gercos/Documents/web/proyecto-evita/components/meet/MeetForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport MeetFirstStep from './MeetFirstStep';\nimport MeetSecondStep from './MeetSecondStep';\nimport { useForm, FormContext } from 'react-hook-form';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return ['Seleccionar tipo de consulta y profesional', 'Definir fecha y hora', 'Confirmar'];\n}\n\nfunction getStepContent(step, formContent) {\n  switch (step) {\n    case 0:\n      return __jsx(MeetFirstStep, _extends({\n        formContent\n      }, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }\n      }));\n\n    case 1:\n      return __jsx(MeetSecondStep, _extends({\n        formContent\n      }, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }));\n\n    case 2:\n      return 'This is the bit I really care about!';\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function MeetForm() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const [compiledForm, setCompiledForm] = React.useState({});\n  const steps = getSteps(); //Para skipear\n\n  const isStepOptional = step => {\n    return step === 2;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, __jsx(Stepper, {\n    activeStep: activeStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, steps.map((label, index) => {\n    const stepProps = {};\n    const labelProps = {};\n\n    if (isStepOptional(index)) {\n      labelProps.optional = __jsx(Typography, {\n        variant: \"caption\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 35\n        }\n      }, \"Optional\");\n    }\n\n    if (isStepSkipped(index)) {\n      stepProps.completed = false;\n    }\n\n    return __jsx(Step, _extends({\n      key: label\n    }, stepProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }), __jsx(StepLabel, _extends({}, labelProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }), label));\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, activeStep === steps.length ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"All steps completed - you're finished\"), __jsx(Button, {\n    onClick: handleReset,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Reset\")) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, //ACA VA SU CODIGO ESI\n  getStepContent(activeStep), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \"Back\"), isStepOptional(activeStep) && __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSkip,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Skip\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, activeStep === steps.length - 1 ? 'Finish' : 'Next')))));\n}\n\n_s(MeetForm, \"rAIuAZHVVk2eVEbnqu3bQmA6/CU=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = MeetForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetForm\");","map":{"version":3,"sources":["/home/gercos/Documents/web/proyecto-evita/components/meet/MeetForm.js"],"names":["makeStyles","Stepper","Step","StepLabel","Button","Typography","MeetFirstStep","MeetSecondStep","useForm","FormContext","useStyles","theme","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","getSteps","getStepContent","step","formContent","MeetForm","classes","register","handleSubmit","activeStep","setActiveStep","React","useState","skipped","setSkipped","Set","compiledForm","setCompiledForm","steps","isStepOptional","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","map","label","index","stepProps","labelProps","optional","completed","length"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport MeetFirstStep from './MeetFirstStep'\nimport MeetSecondStep from './MeetSecondStep'\n\nimport { useForm, FormContext} from 'react-hook-form'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Seleccionar tipo de consulta y profesional', 'Definir fecha y hora', 'Confirmar'];\n}\n\n\nfunction getStepContent(step, formContent) {\n  switch (step) {\n    case 0:\n      return (<MeetFirstStep {...{formContent}}></MeetFirstStep>)\n    case 1:\n      return (<MeetSecondStep {...{formContent}}></MeetSecondStep>);\n    case 2:\n      return 'This is the bit I really care about!';\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function MeetForm() {\n\n  const classes = useStyles();\n  const { register, handleSubmit } = useForm();  \n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const [compiledForm, setCompiledForm] = React.useState({})\n  const steps = getSteps();\n\n  //Para skipear\n  const isStepOptional = (step) => {\n    return step === 2;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    \n    <div className={classes.root}>\n      \n      <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          if (isStepOptional(index)) {\n            labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n          }\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            {\n              //ACA VA SU CODIGO ESI\n              getStepContent(activeStep)\n            }\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                Back\n              </Button>\n              {isStepOptional(activeStep) && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSkip}\n                  className={classes.button}\n                >\n                  Skip\n                </Button>\n              )}\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}