{"ast":null,"code":"var _jsxFileName = \"/home/gercos/Documents/web/proyecto-evita/components/pets/PetAvatar.js\",\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nexport default function PetAvatar(props) {\n  _s();\n\n  const {\n    0: file,\n    1: setFile\n  } = useState('');\n  const {\n    0: imagePreviewUrl,\n    1: setImagePreviewUrl\n  } = useState('');\n  const {\n    0: imgRender\n  } = useState(null);\n  /*\n  useEffect(() => {\n    }, [file, imagePreviewUrl])\n  */\n\n  /*\n   useEffect(()=>{\n     if (imagePreviewUrl) {\n       $imagePreview = (<img src={imagePreviewUrl} />);\n     }\n     else{\n         $imagePreview=(<div >Please selcet an Rata de campo Image</div>)\n     }\n   })\n   */\n\n  const handleImageChange = e => {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      /*this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });*/\n      setFile(file);\n      setImagePreviewUrl(reader.result); //props.onAddAvatar(reader.result)\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  let $imagePreview = null;\n\n  if (imagePreviewUrl) {\n    $imagePreview = __jsx(\"img\", {\n      src: imagePreviewUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 24\n      }\n    });\n  } else {\n    $imagePreview = __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 24\n      }\n    }, \"Please selcet an Rata de campo Image\");\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"input\", {\n    type: \"file\",\n    onChange: handleImageChange,\n    className: \"jsx-2013464274\" + \" \" + \"btn btn-outline-dak\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"jsx-2013464274\" + \" \" + \"imgPreview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, $imagePreview), __jsx(_JSXStyle, {\n    id: \"2013464274\",\n    __self: this\n  }, \"img.jsx-2013464274{border-radius:50%;object-fit:cover;object-position:center;height:150px;width:150px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2dlcmNvcy9Eb2N1bWVudHMvd2ViL3Byb3llY3RvLWV2aXRhL2NvbXBvbmVudHMvcGV0cy9QZXRBdmF0YXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeURvQixBQUcrQixrQkFDRCxpQkFDTSx1QkFDVixhQUNELFlBQ2QiLCJmaWxlIjoiL2hvbWUvZ2VyY29zL0RvY3VtZW50cy93ZWIvcHJveWVjdG8tZXZpdGEvY29tcG9uZW50cy9wZXRzL1BldEF2YXRhci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dXNlU3RhdGUsIHVzZUVmZmVjdH0gZnJvbSAncmVhY3QnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFBldEF2YXRhcihwcm9wcyl7XG4gIFxuICAgIGNvbnN0IFtmaWxlLCBzZXRGaWxlXSA9IHVzZVN0YXRlKCcnKVxuICAgIGNvbnN0IFtpbWFnZVByZXZpZXdVcmwsIHNldEltYWdlUHJldmlld1VybF0gPSB1c2VTdGF0ZSgnJylcbiAgICBjb25zdCBbaW1nUmVuZGVyXSA9IHVzZVN0YXRlKG51bGwpXG4gICAgXG4gICAgLypcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuIFxuICAgIH0sIFtmaWxlLCBpbWFnZVByZXZpZXdVcmxdKVxuICAgICovXG4gICAvKlxuICAgIHVzZUVmZmVjdCgoKT0+e1xuICAgICAgaWYgKGltYWdlUHJldmlld1VybCkge1xuICAgICAgICAkaW1hZ2VQcmV2aWV3ID0gKDxpbWcgc3JjPXtpbWFnZVByZXZpZXdVcmx9IC8+KTtcbiAgICAgIH1cbiAgICAgIGVsc2V7XG4gICAgICAgICAgJGltYWdlUHJldmlldz0oPGRpdiA+UGxlYXNlIHNlbGNldCBhbiBSYXRhIGRlIGNhbXBvIEltYWdlPC9kaXY+KVxuICAgICAgfVxuICAgIH0pXG4gICAgKi9cbiAgICBjb25zdCBoYW5kbGVJbWFnZUNoYW5nZSA9IChlKSA9PntcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgbGV0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgICBsZXQgZmlsZSA9IGUudGFyZ2V0LmZpbGVzWzBdO1xuXG4gICAgICByZWFkZXIub25sb2FkZW5kID0gKCkgPT4ge1xuICAgICAgICAvKnRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIGZpbGU6IGZpbGUsXG4gICAgICAgICAgaW1hZ2VQcmV2aWV3VXJsOiByZWFkZXIucmVzdWx0XG4gICAgICAgIH0pOyovXG4gICAgICAgIHNldEZpbGUoZmlsZSlcbiAgICAgICAgc2V0SW1hZ2VQcmV2aWV3VXJsKHJlYWRlci5yZXN1bHQpXG4gICAgICAgIC8vcHJvcHMub25BZGRBdmF0YXIocmVhZGVyLnJlc3VsdClcbiAgICAgIH1cbiAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpXG4gICAgfVxuXG4gICAgbGV0ICRpbWFnZVByZXZpZXcgPSBudWxsO1xuICAgIGlmIChpbWFnZVByZXZpZXdVcmwpIHtcbiAgICAgICRpbWFnZVByZXZpZXcgPSAoPGltZyBzcmM9e2ltYWdlUHJldmlld1VybH0gLz4pO1xuICAgIH1cbiAgICBlbHNle1xuICAgICAgICAkaW1hZ2VQcmV2aWV3PSg8ZGl2ID5QbGVhc2Ugc2VsY2V0IGFuIFJhdGEgZGUgY2FtcG8gSW1hZ2U8L2Rpdj4pXG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICBcbiAgICAgICAgPGlucHV0IGNsYXNzTmFtZT1cImJ0biBidG4tb3V0bGluZS1kYWtcIiB0eXBlPVwiZmlsZVwiIG9uQ2hhbmdlPXtoYW5kbGVJbWFnZUNoYW5nZX0gLz5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbWdQcmV2aWV3XCI+XG4gICAgICAgICAgICB7JGltYWdlUHJldmlld31cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIFxuICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICAgICAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgICAgICAgICBoZWlnaHQ6IDE1MHB4O1xuICAgICAgICAgICAgd2lkdGg6IDE1MHB4O1xuICAgICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICAgIDwvPlxuICAgIClcblxufVxuLypcbmNsYXNzIFBldEF2YXRhciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBmaWxlOiAnJyxcbiAgICAgIGltYWdlUHJldmlld1VybDogJydcbiAgICB9O1xuICAgIHRoaXMuaGFuZGxlSW1hZ2VDaGFuZ2UgPSB0aGlzLmhhbmRsZUltYWdlQ2hhbmdlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5oYW5kbGVTdWJtaXQgPSB0aGlzLmhhbmRsZVN1Ym1pdC5iaW5kKHRoaXMpO1xuICB9XG5cbiAgaGFuZGxlU3VibWl0KGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgLy8gVE9ETzogZG8gc29tZXRoaW5nIHdpdGggLT4gdGhpcy5zdGF0ZS5maWxlXG4gIH1cblxuICBoYW5kbGVJbWFnZUNoYW5nZShlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgbGV0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgbGV0IGZpbGUgPSBlLnRhcmdldC5maWxlc1swXTtcblxuICAgIHJlYWRlci5vbmxvYWRlbmQgPSAoKSA9PiB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgZmlsZTogZmlsZSxcbiAgICAgICAgaW1hZ2VQcmV2aWV3VXJsOiByZWFkZXIucmVzdWx0XG4gICAgICB9KTtcbiAgICAgIHRoaXMucHJvcHMub25BZGRBdmF0YXIocmVhZGVyLnJlc3VsdClcbiAgICB9XG5cbiAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKVxuICB9XG4gIC8qXG4gIHJlbmRlcigpIHtcbiAgICBsZXQge2ltYWdlUHJldmlld1VybH0gPSB0aGlzLnN0YXRlO1xuICAgIGxldCAkaW1hZ2VQcmV2aWV3ID0gbnVsbDtcbiAgICBpZiAoaW1hZ2VQcmV2aWV3VXJsKSB7XG4gICAgICAkaW1hZ2VQcmV2aWV3ID0gKDxpbWcgc3JjPXtpbWFnZVByZXZpZXdVcmx9IC8+KTtcbiAgICB9XG4gICAgZWxzZXtcbiAgICAgICAgJGltYWdlUHJldmlldz0oPGRpdiBjbGFzc05hbWU9XCJwcmV2aWV3VGV4dFwiPlBsZWFzZSBzZWxjdCBhbiBSYXRhIGRlIGNhbXBvIEltYWdlPC9kaXY+KVxuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2XG4gICAgICAgIGNsYXNzTmFtZT1cInByZXZpZXdDb21wb25lbnRcIj5cbiAgICAgICAgPGZvcm0gb25TdWJtaXQ9e3RoaXMuaGFuZGxlU3VibWl0fT5cbiAgICAgICAgICA8aW5wdXQgY2xhc3NOYW1lPVwiYnRuIGJ0bi1vdXRsaW5lLWRha1wiIHR5cGU9XCJmaWxlXCIgb25DaGFuZ2U9e3RoaXMuaGFuZGxlSW1hZ2VDaGFuZ2V9IC8+XG4gICAgICAgIHsvKjxidXR0b24gY2xhc3NOYW1lPVwic3VibWl0QnV0dG9uXCIgdHlwZT1cInN1Ym1pdFwiIG9uQ2xpY2s9e3RoaXMuaGFuZGxlU3VibWl0fT5FbnZpYXI8L2J1dHRvbj4gKn1cbiAgICAgICAgPC9mb3JtPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImltZ1ByZXZpZXdcIj5cbiAgICAgICAgICAgIHskaW1hZ2VQcmV2aWV3fVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IFBldEF2YXRhclxuKi8iXX0= */\\n/*@ sourceURL=/home/gercos/Documents/web/proyecto-evita/components/pets/PetAvatar.js */\"));\n}\n/*\nclass PetAvatar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: '',\n      imagePreviewUrl: ''\n    };\n    this.handleImageChange = this.handleImageChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    // TODO: do something with -> this.state.file\n  }\n\n  handleImageChange(e) {\n    e.preventDefault();\n\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n      this.props.onAddAvatar(reader.result)\n    }\n\n    reader.readAsDataURL(file)\n  }\n  /*\n  render() {\n    let {imagePreviewUrl} = this.state;\n    let $imagePreview = null;\n    if (imagePreviewUrl) {\n      $imagePreview = (<img src={imagePreviewUrl} />);\n    }\n    else{\n        $imagePreview=(<div className=\"previewText\">Please selct an Rata de campo Image</div>)\n    }\n\n    return (\n      <div\n        className=\"previewComponent\">\n        <form onSubmit={this.handleSubmit}>\n          <input className=\"btn btn-outline-dak\" type=\"file\" onChange={this.handleImageChange} />\n        {/*<button className=\"submitButton\" type=\"submit\" onClick={this.handleSubmit}>Enviar</button> *}\n        </form>\n        <div className=\"imgPreview\">\n            {$imagePreview}\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default PetAvatar\n*/\n\n_s(PetAvatar, \"NxhczwDbkj3cK6Y/VNph1r/9wd8=\");\n\n_c = PetAvatar;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetAvatar\");","map":{"version":3,"sources":["/home/gercos/Documents/web/proyecto-evita/components/pets/PetAvatar.js"],"names":["useState","useEffect","PetAvatar","props","file","setFile","imagePreviewUrl","setImagePreviewUrl","imgRender","handleImageChange","e","preventDefault","reader","FileReader","target","files","onloadend","result","readAsDataURL","$imagePreview"],"mappings":";;;;;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAAA;;AAEpC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACM,eAAD;AAAA,OAAkBC;AAAlB,MAAwCP,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM;AAAA,OAACQ;AAAD,MAAcR,QAAQ,CAAC,IAAD,CAA5B;AAEA;;;;;AAKD;;;;;;;;;;;AAUC,QAAMS,iBAAiB,GAAIC,CAAD,IAAM;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,QAAIT,IAAI,GAAGM,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAX;;AAEAH,IAAAA,MAAM,CAACI,SAAP,GAAmB,MAAM;AACvB;;;;AAIAX,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,kBAAkB,CAACK,MAAM,CAACK,MAAR,CAAlB,CANuB,CAOvB;AACD,KARD;;AASAL,IAAAA,MAAM,CAACM,aAAP,CAAqBd,IAArB;AACD,GAhBD;;AAkBA,MAAIe,aAAa,GAAG,IAApB;;AACA,MAAIb,eAAJ,EAAqB;AACnBa,IAAAA,aAAa,GAAI;AAAK,MAAA,GAAG,EAAEb,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB;AACD,GAFD,MAGI;AACAa,IAAAA,aAAa,GAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAf;AACH;;AAED,SACE,4BAEE;AAAuC,IAAA,IAAI,EAAC,MAA5C;AAAmD,IAAA,QAAQ,EAAEV,iBAA7D;AAAA,wCAAiB,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA,wCAAe,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKU,aADL,CAHF;AAAA;AAAA;AAAA,0zJADF;AAoBH;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GApEwBjB,S;;KAAAA,S","sourcesContent":["import {useState, useEffect} from 'react'\n\nexport default function PetAvatar(props){\n  \n    const [file, setFile] = useState('')\n    const [imagePreviewUrl, setImagePreviewUrl] = useState('')\n    const [imgRender] = useState(null)\n    \n    /*\n    useEffect(() => {\n \n    }, [file, imagePreviewUrl])\n    */\n   /*\n    useEffect(()=>{\n      if (imagePreviewUrl) {\n        $imagePreview = (<img src={imagePreviewUrl} />);\n      }\n      else{\n          $imagePreview=(<div >Please selcet an Rata de campo Image</div>)\n      }\n    })\n    */\n    const handleImageChange = (e) =>{\n      e.preventDefault();\n\n      let reader = new FileReader();\n      let file = e.target.files[0];\n\n      reader.onloadend = () => {\n        /*this.setState({\n          file: file,\n          imagePreviewUrl: reader.result\n        });*/\n        setFile(file)\n        setImagePreviewUrl(reader.result)\n        //props.onAddAvatar(reader.result)\n      }\n      reader.readAsDataURL(file)\n    }\n\n    let $imagePreview = null;\n    if (imagePreviewUrl) {\n      $imagePreview = (<img src={imagePreviewUrl} />);\n    }\n    else{\n        $imagePreview=(<div >Please selcet an Rata de campo Image</div>)\n    }\n\n    return (\n      <>\n      \n        <input className=\"btn btn-outline-dak\" type=\"file\" onChange={handleImageChange} />\n        <div className=\"imgPreview\">\n            {$imagePreview}\n        </div>\n        \n        <style jsx>{`\n          img {\n            border-radius: 50%;\n            object-fit: cover;\n            object-position: center;\n            height: 150px;\n            width: 150px;\n          }\n      `}</style>\n      </>\n    )\n\n}\n/*\nclass PetAvatar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: '',\n      imagePreviewUrl: ''\n    };\n    this.handleImageChange = this.handleImageChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    // TODO: do something with -> this.state.file\n  }\n\n  handleImageChange(e) {\n    e.preventDefault();\n\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n      this.props.onAddAvatar(reader.result)\n    }\n\n    reader.readAsDataURL(file)\n  }\n  /*\n  render() {\n    let {imagePreviewUrl} = this.state;\n    let $imagePreview = null;\n    if (imagePreviewUrl) {\n      $imagePreview = (<img src={imagePreviewUrl} />);\n    }\n    else{\n        $imagePreview=(<div className=\"previewText\">Please selct an Rata de campo Image</div>)\n    }\n\n    return (\n      <div\n        className=\"previewComponent\">\n        <form onSubmit={this.handleSubmit}>\n          <input className=\"btn btn-outline-dak\" type=\"file\" onChange={this.handleImageChange} />\n        {/*<button className=\"submitButton\" type=\"submit\" onClick={this.handleSubmit}>Enviar</button> *}\n        </form>\n        <div className=\"imgPreview\">\n            {$imagePreview}\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default PetAvatar\n*/"]},"metadata":{},"sourceType":"module"}